# properties get loaded into Spring Boot when we set the localmysql profile active
spring.datasource.username=beer_service
spring.datasource.password=password
# 3306 is MySQL's default port, db to connect to beerservice
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/beerservice?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
spring.jpa.database=mysql

# There are several Hibernate modes:- 
# none = is default - although he's not sure, disable DDL handling 
# create = create the schema + destroy previous data 
# create-drop = on start up, it'll create the schema + on shut down it will drop it. 
# validate = common in a production environment>the application does not have the ability to modify the database tables>if the database does not conform to your JPA configuration e.g. table name is different, missing columns etc it fails to start up + tells you why the database is not compliant with your JPA configuration. 
# update = updates the schema if there are any changes. 
# Here we allow Hibernate to go ahead and manage the database / database structure.

spring.jpa.hibernate.ddl-auto=update

# MySQL8Dialect=using MySQL8>ctrl+shift+n search for MySQL8Dialect>shows it's on the classpath>
# click philips screw head in project window to see other dialects e.g. Oracle, Postgres etc.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# 10 connections are created by default, here we override, remember when scaling this microservice each instance will create an extra 5 connections to the DB
spring.datasource.hikari.maximum-pool-size=5

# the documentation doesn't seem to be up to date
# currently to configure Spring Boot>use Spring data source Hikari + data source properties
# https://github.com/brettwooldridge/HikariCP/wiki/MySQL-Configuration>to find the MySQL recommended settings:- 
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
spring.datasource.hikari.data-source-properties.useLocalSessionState=true
spring.datasource.hikari.data-source-properties.rewriteBatchedStatements=true
spring.datasource.hikari.data-source-properties.cacheResultSetMetadata=true
spring.datasource.hikari.data-source-properties.cacheServerConfiguration=true
spring.datasource.hikari.data-source-properties.elideSetAutoCommits=true
spring.datasource.hikari.data-source-properties.maintainTimeStats=false

# Enable logging for config troubleshooting>shown in intelliJ console>in production we won't log as much
# show SQL statements
logging.level.org.hibernate.SQL=DEBUG
# show Hikari configuration>some is set by Spring Boot in it's configuration>the important part is the dataSourceProperties in the console
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE 
